name: 'Terragrunt'
run-name: "Terragrunt GCP ${{ github.event.inputs.environment }}"

env:
  tf_version: '1.6.5'
  tg_version: '0.53.8'
  working_dir: ${{ vars.TG_WORK_DIR }}

on:
  workflow_run:
    workflows: [ "Terragrunt Pipeline to Test app" ]
    types:
      - completed
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug
      runner:
        description: 'Runner to use:'
        required: true
        type: choice
        default: 'ubuntu-latest'
        options:
          - ubuntu-latest
          - self-hosted
          - ubuntu-20.04
      environment:
        description: 'Env to use:'
        required: true
        type: choice
        default: 'dev'
        options:
          - dev
          - stage
          - prod
      dev_front_img_name:
        description: 'Dev Frontend Image name'
        default: "nexus.green-team-schedule.pp.ua/frontend"
        required: true
      dev_front_img_tag:
        description: 'Dev Frontend Image tag'
        default: "1.0.1"
        required: true
      dev_back_img_name:
        description: 'Dev Backend Image name'
        default: "nexus.green-team-schedule.pp.ua/backend"
        required: true
      dev_back_img_tag:
        description: 'Dev Backend Image tag'
        default: "1.0.0"
        required: true
      # stage_front_img_name:
      #   description: 'Stage Frontend Image name'
      #   default: "nexus.green-team-schedule.pp.ua/frontend"
      #   required: true
      # stage_front_img_tag:
      #   description: 'Stage Frontend Image tag'
      #   default: "1.0.1"
      #   required: true
      # prod_front_img_name:
      #   description: 'Stage Frontend Image name'
      #   default: "nexus.green-team-schedule.pp.ua/frontend"
      #   required: true
      # prod_front_img_tag:
      #   description: 'Stage Frontend Image tag'
      #   default: "1.0.1"
      #   required: true

  push:
     paths:
     - "terragrunt/**"
     - "terraform/**"
     branches: [ "main"]

jobs:
  Terragrunt:
    name: 'Terragrunt'
    runs-on: ${{ github.event.inputs.runner || 'ubuntu-20.04' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4.0.0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
         terraform_version: 1.6.5 # optional

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: Terragrunt init
      uses: gruntwork-io/terragrunt-action@v2
      with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all init'
  #        tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

    - name: Terragrunt Validate
      uses: gruntwork-io/terragrunt-action@v2
      with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all validate'

    - name: Terragrunt ${{ vars.TG_COMMAND }}
    # https://terragrunt.gruntwork.io/docs/reference/cli-options/#terragrunt-non-interactive
      uses: gruntwork-io/terragrunt-action@v2
      env:
        TF_VAR_FR_IMAGE_DEV_NAME: ${{ github.event.inputs.dev_front_img_name }}
        TF_VAR_FR_IMAGE_DEV_TAG: ${{ github.event.inputs.dev_front_img_tag }}
        TF_VAR_BE_IMAGE_DEV_NAME: ${{ github.event.inputs.dev_back_img_name }}
        TF_VAR_BE_IMAGE_DEV_TAG: ${{ github.event.inputs.dev_back_img_tag }}
      with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "run-all ${{ vars.TG_COMMAND }} -auto-approve"


